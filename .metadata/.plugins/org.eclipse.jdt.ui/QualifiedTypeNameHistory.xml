<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.cloud.config.client.ConfigServicePropertySourceLocator"/>
<fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.apache.http.protocol.HTTP"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
<fullyQualifiedTypeName name="org.springframework.core.ParameterizedTypeReference"/>
<fullyQualifiedTypeName name="org.springframework.hateoas.Resources"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="com.example.messaging.OperatingStatementChannel"/>
<fullyQualifiedTypeName name="com.example.dto.OperatingStatement"/>
<fullyQualifiedTypeName name="org.springframework.messaging.support.MessageBuilder"/>
<fullyQualifiedTypeName name="org.springframework.cloud.stream.annotation.EnableBinding"/>
<fullyQualifiedTypeName name="com.example.messaging.OperatingStatementChannels"/>
<fullyQualifiedTypeName name="org.springframework.messaging.Message"/>
<fullyQualifiedTypeName name="com.example.repositories.OperatingStatementRepository"/>
<fullyQualifiedTypeName name="com.example.model.OperatingStatement"/>
<fullyQualifiedTypeName name="org.springframework.beans.BeanUtils"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
<fullyQualifiedTypeName name="zipkin.server.EnableZipkinServer"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="java.security.Principal"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
<fullyQualifiedTypeName name="com.example.repo.AccountRepository"/>
<fullyQualifiedTypeName name="java.util.stream.Stream"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="com.example.model.Account"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
</qualifiedTypeNameHistroy>
